/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * buckets.java
 *
 * Created on Nov 29, 2011, 6:54:32 PM
 */

import java.util.List;

import javax.crypto.SecretKey;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.model.Bucket;
/**
 *
 * @author Koteshwar
 */
public class buckets extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8020625185358010965L;
			//Creating Amazon S3 Object,Bucket and list for buckets//
			AmazonS3 s3;
			Bucket selected=null;
		    List<Bucket> bucket;
		    String buckets_master_password;
		    /** Creates new form buckets */
		    public buckets() {
		    	
		        initComponents();
		    }
		    
		    public buckets(AmazonS3 s3, String mp){
		    	initComponents();
		    	
		      //list all buckets for given credentials
		    	this.buckets_master_password=mp;
		    	this.s3 = s3;
		        old_bucket_name_list.removeAllItems();
		        old_bucket_name_list.addItem("Select a bucket");
		        bucket = s3.listBuckets();
		        
		        for (Bucket list_bucket : bucket )
		            old_bucket_name_list.addItem(list_bucket.getName());
		  }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        new_bucket_label = new javax.swing.JLabel();
        new_bucket_name_text = new javax.swing.JTextField();
        new_bucket_button = new javax.swing.JButton();
        new_bucket_cancel_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        old_bucket_name_list = new javax.swing.JComboBox();
        old_bucket_name_label = new javax.swing.JLabel();
        old_bucket_select_button = new javax.swing.JButton();
        old_bucket_cancel_button = new javax.swing.JButton();
        delete_bucket_button = new javax.swing.JButton();
        selected_bucket_owner_label = new javax.swing.JLabel();
        selected_bucket_date_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        new_bucket_label.setText("Bucket Name:");

        new_bucket_button.setText("Create Bucket");
        new_bucket_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_bucket_buttonActionPerformed(evt);
            }
        });

        new_bucket_cancel_button.setText("Cancel");
        new_bucket_cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_bucket_cancel_buttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Note: Bucket Names are unique. If a bucket with same name exists it returns error.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(new_bucket_button)
                                .addGap(18, 18, 18)
                                .addComponent(new_bucket_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(new_bucket_label, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(new_bucket_name_text, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)))
                        .addGap(243, 243, 243))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(new_bucket_label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(new_bucket_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(new_bucket_button)
                    .addComponent(new_bucket_cancel_button))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Bucket", jPanel1);

        old_bucket_name_list.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));
        old_bucket_name_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                old_bucket_name_listActionPerformed(evt);
            }
        });

        old_bucket_name_label.setText("Bucket Name :");

        old_bucket_select_button.setText("Select Bucket");
        old_bucket_select_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                old_bucket_select_buttonActionPerformed(evt);
            }
        });

        old_bucket_cancel_button.setText("Cancel");
        old_bucket_cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                old_bucket_cancel_buttonActionPerformed(evt);
            }
        });

        delete_bucket_button.setText("Delete Bucket");
        delete_bucket_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_bucket_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(selected_bucket_owner_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(selected_bucket_date_label, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(old_bucket_name_label)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(old_bucket_name_list, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(old_bucket_select_button)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(delete_bucket_button, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(old_bucket_cancel_button, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(old_bucket_name_label)
                    .addComponent(old_bucket_name_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(old_bucket_select_button)
                    .addComponent(delete_bucket_button)
                    .addComponent(old_bucket_cancel_button, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(selected_bucket_date_label, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selected_bucket_owner_label, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Select  Bucket", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

private void new_bucket_cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                         
	System.exit(0);
}                                                        

private void new_bucket_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
	if(new_bucket_name_text.getText().isEmpty()){
    	JOptionPane.showMessageDialog(new JFrame(), "Bucket Name cannot be Empty","Error",JOptionPane.ERROR_MESSAGE);	
	}
	else{
		String bucketName = new_bucket_name_text.getText();
		s3.createBucket(bucketName);
		
		old_bucket_name_list.removeAllItems();
		
	    old_bucket_name_list.addItem("Select a bucket");
	    bucket = s3.listBuckets();
	    
	    for (Bucket select_bucket : bucket )
	        old_bucket_name_list.addItem(select_bucket.getName());
	}
}                                                 

@SuppressWarnings("deprecation")
private void delete_bucket_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
	Object bucket_object=old_bucket_name_list.getSelectedItem();
	String bucket_object_name = bucket_object.toString();
	if(bucket_object.equals("Select a bucket"))
    {
		JOptionPane.showMessageDialog(new JFrame(), "Select a Bucket","error",JOptionPane.ERROR_MESSAGE);

    }
    else{
	JOptionPane delete_dialog = new JOptionPane("Only Empty Buckets can be deleted"+"\n\nSure you want to delete the selected bucket :"+bucket_object_name,JOptionPane.INFORMATION_MESSAGE);
	Object[] options = new String[] {" Yes" , "Cancel"};
	delete_dialog.setOptions(options);
	JDialog dialog = delete_dialog.createDialog(new JFrame(), "Confirm Delete Selected Bucket");
    dialog.show();
    Object obj = delete_dialog.getValue(); 
    
    try {
    if(obj.equals(options[0])){
    		s3.deleteBucket(bucket_object_name);
        	old_bucket_name_list.removeAllItems();
            old_bucket_name_list.addItem("Select a bucket");
            bucket = s3.listBuckets();
            
            for (Bucket select_bucket : bucket )
                old_bucket_name_list.addItem(select_bucket.getName());
		}
    }
    catch (Exception e) {
		JOptionPane.showMessageDialog(new JFrame(), "Bucket is not Empty");
	}
    }   
}

//Function for selectecting bucket for given S3 credentials to encrypt or decrypt files 

@SuppressWarnings("deprecation")
private void old_bucket_select_buttonActionPerformed(java.awt.event.ActionEvent evt) {
	Object bucket_object= old_bucket_name_list.getSelectedItem();
	String bucket_object_name = bucket_object.toString();
	
	//Generate Master key
	masterkey mask = new masterkey(buckets_master_password,bucket_object_name);
	SecretKey mk=mask.generateKey();
	
	//System.out.println(mk+" Mast buck");
	/*for (Bucket select_bucket : bucket )
    {
        if (select_bucket.getName().equalsIgnoreCase( (String) old_bucket_name_list.getSelectedItem() ))
        {
            selected = select_bucket;
            selected_bucket_owner_label.setText("Owner:"+selected.getOwner());
            selected_bucket_date_label.setText( "Creation Date: " + selected.getCreationDate());
        }
    }
    */
	
	JOptionPane select_dialog= new JOptionPane("You have selected bucket :"+bucket_object_name+"\n Do you wish to continue");
	
	Object[] options = new String[] {" Yes" , "Cancel"};
	select_dialog.setOptions(options);
	JDialog dialog = select_dialog.createDialog(new JFrame(), "Continue with Selected Bucket");
dialog.show();
Object obj = select_dialog.getValue(); 

if(obj.equals(options[0])){
	this.setVisible(false);
	new Mainwindow(s3, bucket_object,buckets_master_password,mk).setVisible(true);
}
}

private void old_bucket_cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {
	System.exit(0);
}
private void old_bucket_name_listActionPerformed(java.awt.event.ActionEvent evt) {
}

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify
    private javax.swing.JButton delete_bucket_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton new_bucket_button;
    private javax.swing.JButton new_bucket_cancel_button;
    private javax.swing.JLabel new_bucket_label;
    private javax.swing.JTextField new_bucket_name_text;
    private javax.swing.JButton old_bucket_cancel_button;
    private javax.swing.JLabel old_bucket_name_label;
    private javax.swing.JComboBox old_bucket_name_list;
    private javax.swing.JButton old_bucket_select_button;
    private javax.swing.JLabel selected_bucket_date_label;
    private javax.swing.JLabel selected_bucket_owner_label;
    // End of variables declaration
}
